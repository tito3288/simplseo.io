rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read/write their own onboarding data
    match /onboarding/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to read/write their own user data (including GSC tokens)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to read/write their own implemented SEO tips
    match /implementedSeoTips/{docId} {
      allow read, write: if request.auth != null && (
        // New format: check userId field
        (resource.data.userId == request.auth.uid) ||
        // Old format: check if document ID starts with user ID
        (docId.matches(request.auth.uid + '_.*'))
      );
    }
    
    // Allow users to read/write their own internal link suggestions
    match /internalLinkSuggestions/{docId} {
      allow read, write: if request.auth != null && (
        // New format: check userId field
        (resource.data.userId == request.auth.uid) ||
        // Old format: check if document ID starts with user ID
        (docId.matches(request.auth.uid + '_.*'))
      );
    }
    
    // Allow users to read/write their own intent mismatches
    match /intentMismatches/{docId} {
      allow read, write: if request.auth != null && (
        // New format: check userId field
        (resource.data.userId == request.auth.uid) ||
        // Old format: check if document ID starts with user ID
        (docId.matches(request.auth.uid + '_.*'))
      );
    }
    
    // Allow users to read/write their own page content cache (for Content Audit)
    match /pageContentCache/{docId} {
      allow read, write: if request.auth != null && (
        // Check if document ID starts with user ID
        (docId.matches(request.auth.uid + '_.*'))
      );
    }
    
    // Allow users to read/write their own content audit results
    match /contentAuditResults/{docId} {
      allow read, write: if request.auth != null && (
        // New format: check userId field
        (resource.data.userId == request.auth.uid) ||
        // Old format: check if document ID starts with user ID
        (docId.matches(request.auth.uid + '_.*'))
      );
    }
    
    // Allow users to read/write their own AI suggestions
    match /aiSuggestions/{docId} {
      allow read, write: if request.auth != null && (
        // New format: check userId field
        (resource.data.userId == request.auth.uid) ||
        // Old format: check if document ID starts with user ID
        (docId.matches(request.auth.uid + '_.*'))
      );
    }
  }
} 